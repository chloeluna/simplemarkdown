// SimpleMarkdown v1.0.0 - Markdown parsing based on CommonMark spec version 0.30: https://spec.commonmark.org/0.30/
document.addEventListener('DOMContentLoaded',()=>{const d='body{font-family:Arial,sans-serif;margin:20px}h1{font-size:2em;color:#333}h2{font-size:1.5em;color:#555}p{line-height:1.6}ul,ol{margin:0 0 20px 20px}li{margin:5px 0}code{background:#f0f0f0;padding:2px 5px}pre{background:#f0f0f0;padding:10px;overflow:auto}a{color:#0066cc;text-decoration:none}a:hover{text-decoration:underline}blockquote{border-left:4px solid #ccc;padding:0 15px;color:#666}img{max-width:100%}',s=document.querySelector('script[src="webapp.js"]'),c=s.getAttribute('data-css')||'style.css',nh=s.hasAttribute('data-no-header'),nf=s.hasAttribute('data-no-footer');fetch(c).then(r=>r.text()).then(c=>{const s=document.createElement('style');s.textContent=c;document.head.appendChild(s)}).catch(()=>{const s=document.createElement('style');s.textContent=d;document.head.appendChild(s)});const r=s.nextSibling.textContent.trim(),p=t=>{let h='',l=t.split('\n'),k=false,s=[],b='';const f=()=>{if(b.trim()){let p=b;p=p.replace(/\\([*`[])/g,'$1');p=p.replace(/\*\*(.*?)\*\*/g,(_,t)=>`<strong>${t.replace(/\*(.*?)\*/g,'<em>$1</em>')}</strong>`);p=p.replace(/\*(.*?)\*/g,'<em>$1</em>');p=p.replace(/`([^`]+)`/g,'<code>$1</code>');p=p.replace(/!\[([^\]]+)\]\(([^)]+)\)/g,'<img src="$2" alt="$1">');p=p.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2">$1</a>');h+=`<p>${p}</p>`}b=''};for(let i=0;i<l.length;i++){let x=l[i].trimEnd(),n=x.match(/^\s*/)[0].length;if(k&&x==='```'){k=false;h+=`<pre><code>${b}</code></pre>`;b='';continue}if(k){b+=x+'\n';continue}if(x==='```'){f();k=true;continue}if(x.startsWith('#')){f();const v=x.match(/^#+/)?.[0].length||1;if(v<=6){const t=x.replace(/^#+/,'').trim();h+=`<h${v} id="${t.toLowerCase().replace(/\s+/g,'-')}">${t}</h${v}>`;continue}}if(x.startsWith('>')){f();h+=`<blockquote>${x.replace(/^>\s*/,'')}</blockquote>`;continue}if(x.match(/^\s*[-*+]\s/)||x.match(/^\s*\d+\.\s/)){f();const o=!!x.match(/^\s*\d+\.\s/),t=o?'ol':'ul',e=x.replace(/^\s*[-*+]?\s*\d*\.?\s/,'');while(s.length&&n<=s[s.length-1].indent)h+=`</${s.pop().type}>`;if(!s.length||n>s[s.length-1].indent){s.push({type:t,indent:n});h+=`<${t}>`}h+=`<li>${e}</li>`;continue}while(s.length)h+=`</${s.pop().type}>`;if(x.trim())b+=x+' ';else if(b)f();else h+='<br>'}while(s.length)h+=`</${s.pop().type}>`;if(k)h+=`<pre><code>${b}</code></pre>`;else f();return h},m=p(r);document.querySelectorAll('a[href^="#"]').forEach(a=>a.onclick=e=>{e.preventDefault();document.querySelector(a.getAttribute('href'))?.scrollIntoView({behavior:'smooth'})});Promise.all([nh?Promise.resolve(''):fetch('header.html').then(r=>r.text()),nf?Promise.resolve(''):fetch('footer.html').then(r=>r.text())]).then(([h,f])=>document.body.innerHTML=`${h||''}${m}${f||''}`).catch(()=>document.body.innerHTML=m);});
​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
